names(smartPCA_genotypes_evec) <- paste('dim', seq(1, length(smartPCA_genotypes_evec), sep = ""))
names(smartPCA_genotypes_evec) <- paste('dim', seq(1, length(smartPCA_genotypes_evec, sep = "")))
names(smartPCA_genotypes_evec) <- paste('dim', seq(1, length(smartPCA_genotypes_evec), sep = ""))
paste('dim', seq(1, length(smartPCA_genotypes_evec), sep = ""))
?paste
paste('dim', seq(1, length(smartPCA_genotypes_evec)))
paste('dim', seq(1, length(smartPCA_genotypes_evec)), sep = "")
names(smartPCA_missingness_evec) <-  paste('dim', seq(1, length(smartPCA_missingness_evec)), sep = "")
names(smartPCA_genotypes_evec) <- paste('dim', seq(1, length(smartPCA_genotypes_evec)), sep = "")
missingness_IDs = data.frame(str_split_fixed(row.names(smartPCA_missingness_evec), ":", 2))
genotype_IDs = data.frame(str_split_fixed(row.names(smartPCA_genotypes_evec), ":", 2))
names(missingness_IDs) <- c('pop', 'ind')
names(genotype_IDs) <- c('pop', 'ind')
smartPCA_missingness <- cbind(missingness_IDs, smartPCA_missingness_evec)
smartPCA_genotypes <- cbind(genotype_IDs, smartPCA_genotypes_evec)
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point()
ggplot(data = smartPCA_genotypes, aes(x = dim1, y = dim2, color = pop)) + geom_point()
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 4, alpha = .8)
ggplot(data = smartPCA_genotypes, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 4, alpha = .8)
plotParallel(PA_sim, x= smartPCA_eval$V1)
plotParallel(PA_sim, x= eigenval$V1)
plotuScree(x= eigenval$V1)
plotParallel(PA_sim, x= smartPCA_eval$V1)
plotParallel(PA_sim, x= smartPCA__genotypes_eval$V1)
library(nFactors)
library(stringr)
eigenvec <- read.table("/home/ipseg/Desktop/waples/chum_populations/data/FISH_560/FISH_560.final.eigenvec", sep = "\t", header = TRUE)
eigenval <- read.table("/home/ipseg/Desktop/waples/chum_populations/data/FISH_560/FISH_560.final.eigenval", sep = "\t", header = FALSE)
smartPCA_missingness_eval <- read.table("/home/ipseg/Desktop/waples/chum_populations/data/test_EIGENSTRAT/FISH_560.missingness.eval", sep = "\t", header = FALSE)
smartPCA_missingness_evec <- read.table("/home/ipseg/Desktop/waples/chum_populations/data/test_EIGENSTRAT/FISH_560.missingness.evec", header = FALSE, skip =  1, row.names= 1)
smartPCA_genotypes_eval <- read.table("/home/ipseg/Desktop/waples/chum_populations/data/test_EIGENSTRAT/FISH_560.genotypes.eval", sep = "\t", header = FALSE)
smartPCA_genotypes_evec <- read.table("/home/ipseg/Desktop/waples/chum_populations/data/test_EIGENSTRAT/FISH_560.genotypes.evec", header = FALSE, skip =  1, row.names= 1)
names(smartPCA_genotypes_evec) <- paste('dim', seq(1, length(smartPCA_genotypes_evec)), sep = "")
names(smartPCA_missingness_evec) <-  paste('dim', seq(1, length(smartPCA_missingness_evec)), sep = "")
missingness_IDs = data.frame(str_split_fixed(row.names(smartPCA_missingness_evec), ":", 2))
genotype_IDs = data.frame(str_split_fixed(row.names(smartPCA_genotypes_evec), ":", 2))
names(missingness_IDs) <- c('pop', 'ind')
names(genotype_IDs) <- c('pop', 'ind')
smartPCA_missingness <- cbind(missingness_IDs, smartPCA_missingness_evec)
smartPCA_genotypes <- cbind(genotype_IDs, smartPCA_genotypes_evec)
library(ggplot2)
ggplot(data = smartPCA_genotypes, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 4, alpha = .8)
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 4, alpha = .8)
plotParallel(PA_sim, x= smartPCA_genotypes_eval$V1)
smartPCA_genotypes_eval
ggplot(data = smartPCA_genotypes_eval, aes(x=V1)) + geom_point()
ggplot(data = smartPCA_genotypes_eval, aes(x=V1)) + geom_point()
smartPCA_genotypes_eval
ggplot(data = smartPCA_genotypes_eval, aes(x=V1))
ggplot(data = smartPCA_genotypes_eval, aes(x=V1)) + geom_point(size = 4, alpha = .8)
ggplot(data = smartPCA_genotypes_eval, aes(x=V1, y = row.names)) + geom_point(size = 4, alpha = .8)
ggplot(data = smartPCA_genotypes_eval, aes(x=V1, y = row.names)) + geom_point(y = seq(158))
y = seq(158)
seq(158)
names(smartPCA_genotypes_eval)
row.names(smartPCA_genotypes_eval)
ggplot(data = smartPCA_genotypes_eval, aes(x=V1, y = row.names)) + geom_point(y = row.names(smartPCA_genotypes_eval))
ggplot(data = smartPCA_genotypes_eval, aes(x=V1)) + geom_point(y = row.names(smartPCA_genotypes_eval))
ggplot(data = smartPCA_genotypes_eval, aes(x=V1)) + geom_point(aes(y = row.names(smartPCA_genotypes_eval)))
smartPCA_genotypes_eval
plot(smartPCA_genotypes_eval)
plot(smartPCA_genotypes_eval$V1)
nrow(smartPCA_genotypes_eval)
smartPCA_genotypes_eval$pc_axis <- seq(nrow(smartPCA_genotypes_eval))
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point() + geom_path()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(alpha = .5) + geom_path()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(alpha = .5) + geom_path(alpha = .5)
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(alpha = .5) + geom_path(alpha = .5) + theme_bw()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(size = 2, alpha = .5) + geom_path(size = 2, alpha = .5) + theme_bw()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(size = 2, alpha = .5) + geom_path(size = 1, alpha = .5) + theme_bw()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(size = 2, alpha = .8) + geom_path(size = 1, alpha = .5) + theme_bw()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(size = 2, alpha = .8, scale_shape(solid = FALSE)) + geom_path(size = 1, alpha = .5) + theme_bw()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(size = 2, alpha = .8, aes(scale_shape(solid = FALSE))) + geom_path(size = 1, alpha = .5) + theme_bw()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(size = 2, alpha = .8) + geom_path(size = 1, alpha = .5) + theme_bw()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(shape = 1,size = 2, alpha = .8) + geom_path(size = 1, alpha = .5) + theme_bw()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(shape = 1,size = 3, alpha = .8) + geom_path(size = 1, alpha = .5) + theme_bw()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(shape = 1,size = 3, alpha = .8) + geom_path(size = 1, alpha = .2) + theme_bw()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(shape = 1, size = 4, alpha = .8) + geom_path(size = 1, alpha = .2) + theme_bw()
ggplot(data = smartPCA_genotypes_eval, aes(y=V1, x=pc_axis )) + geom_point(shape = 16, size = 4, alpha = .8) + geom_path(size = 1, alpha = .2) + theme_bw()
plot(smartPCA_genotypes_eval$V1)
ggplot(data = smartPCA_genotypes, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 4, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 4, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim3, y = dim4, color = pop)) + geom_point(size = 4, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim5, y = dim6, color = pop)) + geom_point(size = 4, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim7, y = dim8, color = pop)) + geom_point(size = 4, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim9, y = dim10, color = pop)) + geom_point(size = 4, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim10, y = dim11, color = pop)) + geom_point(size = 4, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim11, y = dim12, color = pop)) + geom_point(size = 4, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim3, y = dim4, color = pop)) + geom_point(size = 4, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 5, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 5, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim2, y = dim3, color = pop)) + geom_point(size = 5, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim3, y = dim4, color = pop)) + geom_point(size = 5, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim2, y = dim3, color = pop)) + geom_point(size = 5, alpha = .8) + theme_bw()
theme_set(theme_bw())
pal = "Set1"
scale_colour_discrete <- function(palname = pal, ...) {
scale_colour_brewer(palette = palname, ...)
}
scale_fill_discrete <- function(palname = pal, ...) {
scale_fill_brewer(palette = palname, ...)
}
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 5, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 5, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim3, y = dim4, color = pop)) + geom_point(size = 5, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim2, y = dim3, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
plot(smartPCA_missingness$dim1, smartPCA_genotypes$dim1)
plot(smartPCA_missingness$dim1[1:158], smartPCA_genotypes$dim1)
plot(smartPCA_missingness$dim2[1:158], smartPCA_genotypes$dim2)
plot(smartPCA_missingness$dim3[1:158], smartPCA_genotypes$dim3)
plot(smartPCA_missingness$dim4[1:158], smartPCA_genotypes$dim4)
cor(smartPCA_missingness$dim4[1:158], smartPCA_genotypes$dim4)
names(smartPCA_missingness)
for xx in names(smartPCA_missingness){
cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
for (xx in names(smartPCA_missingness)) {
cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
for (xx in names(smartPCA_missingness)) {
print(xx)
#cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
for (xx in names(smartPCA_missingness)) {
print(xx)
cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
for (xx in names(smartPCA_missingness)[3:]) {
print(xx)
cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
for (xx in names(smartPCA_missingness)[3:]) {
print(xx)
cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
names(smartPCA_missingness)[3:]
names(smartPCA_missingness)[1]
names(smartPCA_missingness)[,3:]
for (xx in names(smartPCA_missingness)[,3:158]) {
print(xx)
cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
for (xx in names(smartPCA_missingness)[,3:158]) {
print(xx)
#cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
for (xx in names(smartPCA_missingness)[3:158]) {
print(xx)
#cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
for (xx in names(smartPCA_missingness)[3:158]) {
print(xx)
cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
for (xx in names(smartPCA_missingness)[3:158]) {
print(smartPCA_missingness$xx[1:158])
#cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
for (xx in names(smartPCA_missingness)[3:158]) {
print(smartPCA_missingness$xx)
#cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
ames(smartPCA_missingness)[3:158]
names(smartPCA_missingness)[3:158]
for (xx in seq(3, 158)) {
print(smartPCA_missingness[xx])
#cor(smartPCA_missingness$xx[1:158], smartPCA_genotypes$xx)
}
for (xx in seq(3, 158)) {
print(smartPCA_missingness[xx])
cor(smartPCA_missingness[xx][1:158], smartPCA_genotypes[xx])
}
xx
smartPCA_missingness[xx][1:158]
smartPCA_missingness[xx]
smartPCA_missingness[xx][,1:5]
smartPCA_missingness[xx][1:5,]
for (xx in seq(3, 158)) {
cor(smartPCA_missingness[xx][1:158,], smartPCA_genotypes[xx])
}
smartPCA_genotypes[xx]
smartPCA_genotypes
for (xx in seq(3, 158)) {
cor(smartPCA_missingness[xx][1:158,], smartPCA_genotypes[xx])
}
xx
for (xx in seq(3, 100)) {
cor(smartPCA_missingness[xx][1:158,], smartPCA_genotypes[xx])
}
for (xx in seq(3, 100)) {
print(cor(smartPCA_missingness[xx][1:158,], smartPCA_genotypes[xx]))
}
ggplot(data = smartPCA_genotypes, aes(x = dim7, y = dim8, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
ggplot(data = smartPCA_genotypes, aes(x = dim3, y = dim4, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim2, y = dim3, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim3, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
smartPCA_missingness
smartPCA_missingness_eval
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() + xlab(paste("dim1", smartPCA_missingness_eval[1]) )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() + xlab(paste("dim1", smartPCA_missingness_eval[1][1]) )
smartPCA_missingness_eval[1]
smartPCA_missingness_eval[,1]
smartPCA_missingness_eval[,1][1]
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() + xlab(paste("dim1", smartPCA_missingness_eval[,1][1]) )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() + xlab(paste("dim1", smartPCA_missingness_eval[,1][1], "%") )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() + xlab(paste("dim1: ", smartPCA_missingness_eval[,1][1], "%") )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() +
xlab(paste("dim1: ", smartPCA_missingness_eval[,1][1], "%") )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() +
xlab(paste("dim1: ", smartPCA_missingness_eval[,1][1], "%") )  + ylab(paste("dim2: ", smartPCA_missingness_eval[,1][2], "%") )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + coord_equal() +theme_bw() +
xlab(paste("dim1: ", smartPCA_missingness_eval[,1][1], "%") )  + ylab(paste("dim2: ", smartPCA_missingness_eval[,1][2], "%") )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + coord_equal() +theme_bw() +
xlab(paste("dim1: ", smartPCA_missingness_eval[,1][1], "%") )  + ylab(paste("dim2: ", smartPCA_missingness_eval[,1][2], "%") )
ggplot(data = smartPCA_genotypes, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()  +
xlab(paste("dim1: ", smartPCA_genotypes_eval[,1][1], "%") )  + ylab(paste("dim2: ", smartPCA_genotypes_eval[,1][2], "%") )
install.packages(c("BatchJobs", "ggplot2", "manipulate"))
system("python scripts/pop_to_map.py")
system("python scripts/pop_to_map.py")
library(ggplot2)
library(stringr)
library(plyr)
map_positions <- read.table("/home/ipseg/Desktop/waples/chum_populations/linkage_map/LEPmap/with_paralogs/partial_union.txt", sep = "\t", header = TRUE)
map_positions
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .7, y = consensus_cM), color = 'red') +
geom_segment(aes(x = fam_08_LG, y = fam_08_cM, xend =  consensus_LG + .7 , yend = consensus_cM), color = 'red', alpha = .2) +
theme_bw()
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .7, y = consensus_cM), color = 'red')
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .3, y = consensus_cM), color = 'red')
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .3, y = consensus_cM), color = 'red') +
geom_segment(aes(x = fam_08_LG, y = fam_08_cM, xend =  consensus_LG + .3 , yend = consensus_cM), color = 'red', alpha = .2)
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .3, y = consensus_cM), color = 'red') +
geom_segment(aes(x = fam_08_LG, y = fam_08_cM, xend =  consensus_LG + .3 , yend = consensus_cM), color = 'red', alpha = .2) +
theme_bw()
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG-.2), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .2, y = consensus_cM), color = 'red') +
geom_segment(aes(x = fam_08_LG-.2, y = fam_08_cM, xend =  consensus_LG + .2 , yend = consensus_cM), color = 'red', alpha = .2) +
theme_bw()
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG)-.2, y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .2, y = consensus_cM), color = 'red') +
geom_segment(aes(x = fam_08_LG-.2, y = fam_08_cM, xend =  consensus_LG + .2 , yend = consensus_cM), color = 'red', alpha = .2) +
theme_bw()
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG +.2, y = consensus_cM), color = 'red') +
geom_segment(aes(x = fam_08_LG, y = fam_08_cM, xend =  consensus_LG + .2 , yend = consensus_cM), color = 'red', alpha = .2) +
theme_bw()
install.packages(c("checkmate", "manipulate", "mnormt"))
library(shiny)
install.packages("shiny")
runExample("01_hello")
runExample("01_hello")
library(shiny)
runExample("01_hello")
runExample("05_sliders") # slider bars
runApp(shiny)
runApp("shiny")
runApp("mds")
setwd("~/Desktop/waples/chum_populations/plots/shiny")
runApp("mds")
runApp("mds")
))
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
header = TRUE,sep = "\t")
mds = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/ind_analysis/non_paralogs.IND_md_poistions'',
header = TRUE,sep = "\t")
mds = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/ind_analysis/non_paralogs.IND_md_poistions',
header = TRUE,sep = "\t")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
ggplot(mds, aes(x=dim_1, y=dim_2)) + geom_point()
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
mds = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/ind_analysis/non_paralogs.IND_md_poistions',
header = TRUE,sep = "\t")
mds['dim_1']
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("linkage map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
numericInput("span", "alpha (smoothing parameter):", 1, min=.01, max =1),
numericInput("span", "alpha (smoothing parameter):", 1, min=.01, max =1),
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
devtools::install_github('rstudio/shinyapps')
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
library(devtools)
devtools::install_github('rstudio/shinyapps')
install.packages('devtools')
install.packages('devtools')
library(devtools)
devtools::install_github('rstudio/shinyapps')
shiny::runApp('mds')
runApp()
setwd("~/Desktop/waples/chum_populations/plots/shiny/mds")
setwd("~/Desktop/waples/chum_populations/plots/shiny/mds")
runApp()
library(shinyapps)
deployApp()
shinyapps::setAccountInfo(name="rwaples", token="70463C3D1C5703D7C4097E0B6AFBB5D1", secret="GFPg5fZI9Z7JcBGM/xmBP5vFQ7bn4f/ArGu66Va8")
deployApp()
setwd("~/Desktop/waples/chum_populations/plots/shiny/chum_mds")
shinyapps::setAccountInfo(name="rwaples", token="70463C3D1C5703D7C4097E0B6AFBB5D1", secret="GFPg5fZI9Z7JcBGM/xmBP5vFQ7bn4f/ArGu66Va8")
deployApp()
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
method = 'loess', span=input$span, labeller==label_bquote('LG:' .(x)))+
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
?merge
linkage_map = read.table('map_pop_fst.txt',
header = TRUE,sep = "\t")
mapped_outliers = read.table('mapped_outliers.txt',
header = TRUE, sep = "\t")
linkage_map = merge(linkage_map, mapped_outliers, by =  'stacks_SNP', all.x = TRUE)
setwd("~/Desktop/waples/chum_populations/plots/shiny/linkage_map")
linkage_map = read.table('map_pop_fst.txt',
header = TRUE,sep = "\t")
mapped_outliers = read.table('mapped_outliers.txt',
header = TRUE, sep = "\t")
linkage_map = merge(linkage_map, mapped_outliers, by =  'stacks_SNP', all.x = TRUE)
View(linkage_map)
linkage_map = read.table('map_pop_fst.txt',
header = TRUE,sep = "\t")
mapped_outliers = read.table('mapped_outliers.txt',
header = TRUE, sep = "\t")
linkage_map = merge(linkage_map, mapped_outliers, by ='stacks_SNP', all.x = TRUE)
linkage_map$outlier = !is.na(linkage_map$BSname)
View(linkage_map)
sum(linkage_map$outlier)
shiny::runApp()
shiny::runApp()
linkage_map = read.table('map_pop_fst.txt',
header = TRUE,sep = "\t")
mapped_outliers = read.table('mapped_bayescan.txt',
header = TRUE, sep = "\t")
linkage_map = merge(linkage_map, mapped_outliers, by ='stacks_SNP', all.x = TRUE)
View(linkage_map)
setwd("~/Desktop/waples/chum_populations/plots/shiny/chum_mds")
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
shiny::runApp()
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
map_fst_flagged = map_fst
fst_to_plot = input$fst_to_plot
map_fst_flagged$fst = map_fst_flagged$fst_to_plot
map_fst_flagged$outlier = map_fst_flagged$qval < input$fdr
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$fst = map_fst_flagged$fst_to_plot
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$fst = map_fst_flagged$fst_to_plot
map_fst_flagged = map_fst
map_fst = read.table('map_pop_bayescan.txt',
header = TRUE,sep = "\t")
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$fst = map_fst_flagged$fst_to_plot
map_fst = read.table('map_pop_bayescan.txt',
header = TRUE,sep = "\t")
map_fst_flagged = map_fst
setwd("~/Desktop/waples/chum_populations/plots/shiny/linkage_map")
map_fst = read.table('map_pop_bayescan.txt',
header = TRUE,sep = "\t")
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$fst = map_fst_flagged$fst_to_plot
map_fst_flagged$outlier = map_fst_flagged$qval < input$fdr
map_fst_flagged$outlier = map_fst_flagged$qval <.01
View(map_fst_flagged)
map_fst_flagged$plotfst = map_fst_flagged$fst_to_plot
View(map_fst_flagged)
map_fst_flagged$fst_to_plot
map_fst_flagged[fst_to_plot]
map_fst_flagged$outlier = map_fst_flagged$qval <.01
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$plotfst = map_fst_flagged[fst_to_plot]
map_fst_flagged$outlier = map_fst_flagged$qval <.01
View(map_fst_flagged)
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$plotfst = map_fst_flagged[fst_to_plot]
map_fst_flagged$outlier = map_fst_flagged$qval <.01
View(map_fst_flagged)
map_fst_flagged[[fst_to_plot]]
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$plotfst = map_fst_flagged[[fst_to_plot]]
map_fst_flagged$outlier = map_fst_flagged$qval <.01
View(map_fst_flagged)
shiny::runApp()
library(shiny)
library(shiny)
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# Application title
titlePanel("Alelle-sharing distance"),
# Sidebar with a slider input for the number of bins
sidebarPanel(
selectInput("type", "type of analysis:", c('MDS', 'PCA')),
selectInput("xcol", "X axis:", c('dim_1', 'dim_2', 'dim_3', 'dim_4', 'dim_5', 'dim_6', 'dim_7', 'dim_8', 'dim_9')),
selectInput("ycol","Y axis:",  c('dim_1', 'dim_2', 'dim_3', 'dim_4', 'dim_5', 'dim_6', 'dim_7', 'dim_8', 'dim_9'),
selected = 'dim_2'),
selectInput("colorby","Color by:", c('Population', 'Region', 'Run Timing'))
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("plot1")
)
)
)
library(shiny)
install.packages("shiny")
library(shiny)
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# Application title
titlePanel("Alelle-sharing distance"),
# Sidebar with a slider input for the number of bins
sidebarPanel(
selectInput("type", "type of analysis:", c('MDS', 'PCA')),
selectInput("xcol", "X axis:", c('dim_1', 'dim_2', 'dim_3', 'dim_4', 'dim_5', 'dim_6', 'dim_7', 'dim_8', 'dim_9')),
selectInput("ycol","Y axis:",  c('dim_1', 'dim_2', 'dim_3', 'dim_4', 'dim_5', 'dim_6', 'dim_7', 'dim_8', 'dim_9'),
selected = 'dim_2'),
selectInput("colorby","Color by:", c('Population', 'Region', 'Run Timing'))
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("plot1")
)
)
)
