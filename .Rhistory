ggplot(data = smartPCA_genotypes, aes(x = dim3, y = dim4, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim2, y = dim3, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim3, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()
smartPCA_missingness
smartPCA_missingness_eval
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() + xlab(paste("dim1", smartPCA_missingness_eval[1]) )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() + xlab(paste("dim1", smartPCA_missingness_eval[1][1]) )
smartPCA_missingness_eval[1]
smartPCA_missingness_eval[,1]
smartPCA_missingness_eval[,1][1]
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() + xlab(paste("dim1", smartPCA_missingness_eval[,1][1]) )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() + xlab(paste("dim1", smartPCA_missingness_eval[,1][1], "%") )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() + xlab(paste("dim1: ", smartPCA_missingness_eval[,1][1], "%") )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() +
xlab(paste("dim1: ", smartPCA_missingness_eval[,1][1], "%") )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw() +
xlab(paste("dim1: ", smartPCA_missingness_eval[,1][1], "%") )  + ylab(paste("dim2: ", smartPCA_missingness_eval[,1][2], "%") )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + coord_equal() +theme_bw() +
xlab(paste("dim1: ", smartPCA_missingness_eval[,1][1], "%") )  + ylab(paste("dim2: ", smartPCA_missingness_eval[,1][2], "%") )
ggplot(data = smartPCA_missingness, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + coord_equal() +theme_bw() +
xlab(paste("dim1: ", smartPCA_missingness_eval[,1][1], "%") )  + ylab(paste("dim2: ", smartPCA_missingness_eval[,1][2], "%") )
ggplot(data = smartPCA_genotypes, aes(x = dim1, y = dim2, color = pop)) + geom_point(size = 6, alpha = .8) + theme_bw()  +
xlab(paste("dim1: ", smartPCA_genotypes_eval[,1][1], "%") )  + ylab(paste("dim2: ", smartPCA_genotypes_eval[,1][2], "%") )
install.packages(c("BatchJobs", "ggplot2", "manipulate"))
system("python scripts/pop_to_map.py")
system("python scripts/pop_to_map.py")
library(ggplot2)
library(stringr)
library(plyr)
map_positions <- read.table("/home/ipseg/Desktop/waples/chum_populations/linkage_map/LEPmap/with_paralogs/partial_union.txt", sep = "\t", header = TRUE)
map_positions
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .7, y = consensus_cM), color = 'red') +
geom_segment(aes(x = fam_08_LG, y = fam_08_cM, xend =  consensus_LG + .7 , yend = consensus_cM), color = 'red', alpha = .2) +
theme_bw()
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .7, y = consensus_cM), color = 'red')
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .3, y = consensus_cM), color = 'red')
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .3, y = consensus_cM), color = 'red') +
geom_segment(aes(x = fam_08_LG, y = fam_08_cM, xend =  consensus_LG + .3 , yend = consensus_cM), color = 'red', alpha = .2)
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .3, y = consensus_cM), color = 'red') +
geom_segment(aes(x = fam_08_LG, y = fam_08_cM, xend =  consensus_LG + .3 , yend = consensus_cM), color = 'red', alpha = .2) +
theme_bw()
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG-.2), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .2, y = consensus_cM), color = 'red') +
geom_segment(aes(x = fam_08_LG-.2, y = fam_08_cM, xend =  consensus_LG + .2 , yend = consensus_cM), color = 'red', alpha = .2) +
theme_bw()
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG)-.2, y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG + .2, y = consensus_cM), color = 'red') +
geom_segment(aes(x = fam_08_LG-.2, y = fam_08_cM, xend =  consensus_LG + .2 , yend = consensus_cM), color = 'red', alpha = .2) +
theme_bw()
ggplot(data = map_positions) + geom_point(aes(x = factor(fam_08_LG), y = fam_08_cM), color = 'blue', alpha = .5) +
geom_point(aes(x = consensus_LG +.2, y = consensus_cM), color = 'red') +
geom_segment(aes(x = fam_08_LG, y = fam_08_cM, xend =  consensus_LG + .2 , yend = consensus_cM), color = 'red', alpha = .2) +
theme_bw()
install.packages(c("checkmate", "manipulate", "mnormt"))
library(shiny)
install.packages("shiny")
runExample("01_hello")
runExample("01_hello")
library(shiny)
runExample("01_hello")
runExample("05_sliders") # slider bars
runApp(shiny)
runApp("shiny")
runApp("mds")
setwd("~/Desktop/waples/chum_populations/plots/shiny")
runApp("mds")
runApp("mds")
))
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
header = TRUE,sep = "\t")
mds = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/ind_analysis/non_paralogs.IND_md_poistions'',
header = TRUE,sep = "\t")
mds = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/ind_analysis/non_paralogs.IND_md_poistions',
header = TRUE,sep = "\t")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
ggplot(mds, aes(x=dim_1, y=dim_2)) + geom_point()
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
mds = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/ind_analysis/non_paralogs.IND_md_poistions',
header = TRUE,sep = "\t")
mds['dim_1']
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("mds")
runApp("linkage map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
numericInput("span", "alpha (smoothing parameter):", 1, min=.01, max =1),
numericInput("span", "alpha (smoothing parameter):", 1, min=.01, max =1),
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
runApp("linkage_map")
devtools::install_github('rstudio/shinyapps')
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
library(devtools)
devtools::install_github('rstudio/shinyapps')
install.packages('devtools')
install.packages('devtools')
library(devtools)
devtools::install_github('rstudio/shinyapps')
shiny::runApp('mds')
runApp()
setwd("~/Desktop/waples/chum_populations/plots/shiny/mds")
setwd("~/Desktop/waples/chum_populations/plots/shiny/mds")
runApp()
library(shinyapps)
deployApp()
shinyapps::setAccountInfo(name="rwaples", token="70463C3D1C5703D7C4097E0B6AFBB5D1", secret="GFPg5fZI9Z7JcBGM/xmBP5vFQ7bn4f/ArGu66Va8")
deployApp()
setwd("~/Desktop/waples/chum_populations/plots/shiny/chum_mds")
shinyapps::setAccountInfo(name="rwaples", token="70463C3D1C5703D7C4097E0B6AFBB5D1", secret="GFPg5fZI9Z7JcBGM/xmBP5vFQ7bn4f/ArGu66Va8")
deployApp()
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
method = 'loess', span=input$span, labeller==label_bquote('LG:' .(x)))+
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
?merge
linkage_map = read.table('map_pop_fst.txt',
header = TRUE,sep = "\t")
mapped_outliers = read.table('mapped_outliers.txt',
header = TRUE, sep = "\t")
linkage_map = merge(linkage_map, mapped_outliers, by =  'stacks_SNP', all.x = TRUE)
setwd("~/Desktop/waples/chum_populations/plots/shiny/linkage_map")
linkage_map = read.table('map_pop_fst.txt',
header = TRUE,sep = "\t")
mapped_outliers = read.table('mapped_outliers.txt',
header = TRUE, sep = "\t")
linkage_map = merge(linkage_map, mapped_outliers, by =  'stacks_SNP', all.x = TRUE)
View(linkage_map)
linkage_map = read.table('map_pop_fst.txt',
header = TRUE,sep = "\t")
mapped_outliers = read.table('mapped_outliers.txt',
header = TRUE, sep = "\t")
linkage_map = merge(linkage_map, mapped_outliers, by ='stacks_SNP', all.x = TRUE)
linkage_map$outlier = !is.na(linkage_map$BSname)
View(linkage_map)
sum(linkage_map$outlier)
shiny::runApp()
shiny::runApp()
linkage_map = read.table('map_pop_fst.txt',
header = TRUE,sep = "\t")
mapped_outliers = read.table('mapped_bayescan.txt',
header = TRUE, sep = "\t")
linkage_map = merge(linkage_map, mapped_outliers, by ='stacks_SNP', all.x = TRUE)
View(linkage_map)
setwd("~/Desktop/waples/chum_populations/plots/shiny/chum_mds")
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
shiny::runApp()
shiny::runApp('~/Desktop/waples/chum_populations/plots/shiny/linkage_map')
map_fst_flagged = map_fst
fst_to_plot = input$fst_to_plot
map_fst_flagged$fst = map_fst_flagged$fst_to_plot
map_fst_flagged$outlier = map_fst_flagged$qval < input$fdr
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$fst = map_fst_flagged$fst_to_plot
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$fst = map_fst_flagged$fst_to_plot
map_fst_flagged = map_fst
map_fst = read.table('map_pop_bayescan.txt',
header = TRUE,sep = "\t")
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$fst = map_fst_flagged$fst_to_plot
map_fst = read.table('map_pop_bayescan.txt',
header = TRUE,sep = "\t")
map_fst_flagged = map_fst
setwd("~/Desktop/waples/chum_populations/plots/shiny/linkage_map")
map_fst = read.table('map_pop_bayescan.txt',
header = TRUE,sep = "\t")
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$fst = map_fst_flagged$fst_to_plot
map_fst_flagged$outlier = map_fst_flagged$qval < input$fdr
map_fst_flagged$outlier = map_fst_flagged$qval <.01
View(map_fst_flagged)
map_fst_flagged$plotfst = map_fst_flagged$fst_to_plot
View(map_fst_flagged)
map_fst_flagged$fst_to_plot
map_fst_flagged[fst_to_plot]
map_fst_flagged$outlier = map_fst_flagged$qval <.01
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$plotfst = map_fst_flagged[fst_to_plot]
map_fst_flagged$outlier = map_fst_flagged$qval <.01
View(map_fst_flagged)
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$plotfst = map_fst_flagged[fst_to_plot]
map_fst_flagged$outlier = map_fst_flagged$qval <.01
View(map_fst_flagged)
map_fst_flagged[[fst_to_plot]]
map_fst_flagged = map_fst
fst_to_plot = 'Fst_plink'
map_fst_flagged$plotfst = map_fst_flagged[[fst_to_plot]]
map_fst_flagged$outlier = map_fst_flagged$qval <.01
View(map_fst_flagged)
shiny::runApp()
library(shiny)
library(shiny)
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# Application title
titlePanel("Alelle-sharing distance"),
# Sidebar with a slider input for the number of bins
sidebarPanel(
selectInput("type", "type of analysis:", c('MDS', 'PCA')),
selectInput("xcol", "X axis:", c('dim_1', 'dim_2', 'dim_3', 'dim_4', 'dim_5', 'dim_6', 'dim_7', 'dim_8', 'dim_9')),
selectInput("ycol","Y axis:",  c('dim_1', 'dim_2', 'dim_3', 'dim_4', 'dim_5', 'dim_6', 'dim_7', 'dim_8', 'dim_9'),
selected = 'dim_2'),
selectInput("colorby","Color by:", c('Population', 'Region', 'Run Timing'))
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("plot1")
)
)
)
library(shiny)
install.packages("shiny")
library(shiny)
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# Application title
titlePanel("Alelle-sharing distance"),
# Sidebar with a slider input for the number of bins
sidebarPanel(
selectInput("type", "type of analysis:", c('MDS', 'PCA')),
selectInput("xcol", "X axis:", c('dim_1', 'dim_2', 'dim_3', 'dim_4', 'dim_5', 'dim_6', 'dim_7', 'dim_8', 'dim_9')),
selectInput("ycol","Y axis:",  c('dim_1', 'dim_2', 'dim_3', 'dim_4', 'dim_5', 'dim_6', 'dim_7', 'dim_8', 'dim_9'),
selected = 'dim_2'),
selectInput("colorby","Color by:", c('Population', 'Region', 'Run Timing'))
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("plot1")
)
)
)
read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt')
read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt', sep ='\t')
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt', sep ='\t')
install.packages("manipulate")
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt', sep ='\t')
View(chum_ssa)
sep ='\t', header = TRUE)
sep ='\t', header = TRUE)
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
View(chum_ssa)
library(ggplot2)
View(chum_ssa)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG)]
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
View(chum_ssa)
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
View(chum_ssa)
1:nrow(chum_ssa)
chum_ssa$plot_order = 1:nrow(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= plot_order, y = POS))
library(ggplot2)
ggplot(chum_ssa) + geom_point(aes(x= plot_order, y = POS))
install.packages("ggplot2")
library(ggplot2)
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
chum_ssa$plot_order = 1:nrow(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= plot_order, y = POS))
ggplot(chum_ssa) + geom_point(aes(x= plot_order, y = Ssa_chr, color = Ssa_chr))
ggplot(chum_ssa) + geom_point(aes(x= LEP_LG, y = Ssa_chr, color = Ssa_chr))
ggplot(chum_ssa) + geom_point(aes(x= plot_order, y = Ssa_chr, color = Ssa_chr))
ggplot(chum_ssa) + geom_point(aes(x= plot_order, y = Ssa_chr, color = LEP_LG))
ggplot(chum_ssa) + geom_point(aes(x= plot_order, y = Ssa_chr, color = factor(LEP_LG))
ggplot(chum_ssa) + geom_point(aes(x= plot_order, y = Ssa_chr, color = factor(LEP_LG)))
View(chum_ssa)
chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,chum_ssa$POS),]
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
chum_ssa$chum_order = 1:nrow(chum_ssa)
chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,chum_ssa$POS),]
chum_ssa$ssa_order = 1:nrow(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = ssa_order, color = factor(LEP_LG)))
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = ssa_order, color = factor(Ssa_chr)))
View(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(Ssa_chr)))
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG)))
even()
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor((LEP_LG % 2) == 0)))
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor((LEP_LG % 2) == 0)))
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor((LEP_LG % 2) )))
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG % 2) ))
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = LEP_LG % 2))
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = (LEP_LG % 2)))
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr))
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = LEP_LG))
chum_ssa$COLOR = chum_ssa$LEP_LG % 2 ==0
chum_ssa$COLOR = (chum_ssa$LEP_LG % 2 ==0)
chum_ssa$COLOR = (chum_ssa$LEP_LG % 2) ==0
chum_ssa$LEP_LG
chum_ssa$LEP_LG % 2
chum_ssa$LEP_LG%2
2%2
2%%2
chum_ssa$LEP_LG%%2
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%2)))
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%4)))
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%7)))
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%7))) + scale_color_brewer()
?scale_color_brewer()
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%7))) +
scale_color_brewer(type = 'qual')
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5))) +
scale_color_brewer(type = 'qual')
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5))) +
scale_color_brewer(palette = 2, type = 'qual')
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 3, alpha = .4) +
scale_color_brewer(palette = 2, type = 'qual')
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 3, alpha = .4) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
View(chum_ssa)
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
chum_ssa$chum_order = 1:nrow(chum_ssa)
View(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 3, alpha = .4) +
scale_x_continuous(breaks = c(1,1+which(diff(LEP_LG)!=0))) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 3, alpha = .4) +
scale_x_continuous(breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0))) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 3, alpha = .4) +
scale_x_continuous(breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0)), labels= 0:37) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
chum_ssa$chum_order = 1:nrow(chum_ssa)
#chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,chum_ssa$POS),]
chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,]
chum_ssa$ssa_order = 1:nrow(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 3, alpha = .4) +
scale_x_continuous(breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0)), labels= 0:37) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
chum_ssa$chum_order = 1:nrow(chum_ssa)
#chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,chum_ssa$POS),]
chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,]
chum_ssa$ssa_order = 1:nrow(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 7, alpha = .4) +
scale_x_continuous(breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0)), labels= 0:37) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 7, alpha = .4) +
scale_x_continuous(name = 'chum LG', breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0)), labels= 0:37) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 7, alpha = .6) +
scale_x_continuous(name = 'chum LG', breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0)), labels= 0:37) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
chum_ssa$chum_order = 1:nrow(chum_ssa)
#chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,chum_ssa$POS),]
chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,]
chum_ssa$ssa_order = 1:nrow(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 7, alpha = .6) +
scale_x_continuous(name = 'chum LG', breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0)), labels= 0:37) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
library(ggplot2)
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
chum_ssa$chum_order = 1:nrow(chum_ssa)
#chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,chum_ssa$POS),]
chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,]
chum_ssa$ssa_order = 1:nrow(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 7, alpha = .6) +
scale_x_continuous(name = 'chum LG', breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0)), labels= 0:37) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
library(ggplot2)
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
chum_ssa$chum_order = 1:nrow(chum_ssa)
#chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,chum_ssa$POS),]
chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,]
chum_ssa$ssa_order = 1:nrow(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 7, alpha = .6) +
scale_x_continuous(name = 'chum LG', breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0)), labels= 0:37) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr),]
library(ggplot2)
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
chum_ssa$chum_order = 1:nrow(chum_ssa)
#chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,chum_ssa$POS),]
chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr),]
chum_ssa$ssa_order = 1:nrow(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 7, alpha = .6) +
scale_x_continuous(name = 'chum LG', breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0)), labels= 0:37) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
library(ggplot2)
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
chum_ssa$chum_order = 1:nrow(chum_ssa)
#chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,chum_ssa$POS),]
chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr),]
chum_ssa$ssa_order = 1:nrow(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 7, alpha = .6) +
scale_x_continuous(name = 'chum LG', breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0)), labels= 0:37) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
library(ggplot2)
chum_ssa = read.table('/home/ipseg/Desktop/waples/chum_populations/results/batch_4/synteny/chum_ssa.txt',
sep ='\t', header = TRUE)
chum_ssa = chum_ssa[order(chum_ssa$LEP_LG),]
chum_ssa$chum_order = 1:nrow(chum_ssa)
#chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr,chum_ssa$POS),]
chum_ssa = chum_ssa[order(chum_ssa$Ssa_chr),]
chum_ssa$ssa_order = 1:nrow(chum_ssa)
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 7, alpha = .6) +
scale_x_continuous(name = 'chum LG', breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0)), labels= 0:37) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
ggplot(chum_ssa) + geom_point(aes(x= chum_order, y = Ssa_chr, color = factor(LEP_LG%%5)), size = 7, alpha = .6) +
#scale_x_continuous(name = 'chum LG', breaks = c(1,1+which(diff(chum_ssa$LEP_LG)!=0)), labels= 0:37) +
scale_color_brewer(palette = 2, type = 'qual') + theme_bw()
